name: Publish Docker image

on:
  push: 
    branches: ["production", "development"]
  pull_request:
    branches: ["production", "development"]

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Determine Docker Tag
        id: docker-tag
      #   run: |
      #     if [ "${{ github.ref_name }}" == "production" ]; then
      #       echo "TAG=prod" >> $GITHUB_ENV
      #       echo "PUBLIC_URL=/ordenes" >> $GITHUB_ENV
      #       echo "REACT_APP_API_URL=https://brtsistemas.com/ordenes_api/api" >> $GITHUB_ENV
      #     elif [ "${{ github.ref_name }}" == "development" ]; then
      #       echo "TAG=test" >> $GITHUB_ENV
      #       echo "PUBLIC_URL=/ordenes_dev" >> $GITHUB_ENV
      #       echo "REACT_APP_API_URL=https://brtsistemas.com/ordenes_dev_api/api" >> $GITHUB_ENV
      #     fi
      - name: Get current timestamp for REACT_APP_LAST_UPDATE
        id: timestamp
        run: |
          echo "REACT_APP_LAST_UPDATE=$(TZ="America/Bogota" date '+%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
        
      - name: Build and push Docker image
        run: |
          docker build . \
            --build-arg PUBLIC_URL=${{ env.PUBLIC_URL }} \
            --build-arg REACT_APP_API_URL=${{ env.REACT_APP_API_URL }} \
            --build-arg REACT_APP_LAST_UPDATE=${{ env.REACT_APP_LAST_UPDATE }} \
            --tag ghcr.io/cris590/ordencompra-front-v2:${{ env.TAG }}
          docker push ghcr.io/cris590/ordencompra-front-v2:${{ env.TAG }}

  deploy:
    needs: create-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Determine Deployment Environment
        id: deploy-env
        run: |
          if [ "${{ github.ref_name }}" == "production" ]; then
            echo "ENV_PATH_FRONT=/services/prod/ordenes_compra/frontend/" >> $GITHUB_ENV
            echo "CONTAINER_NAME_FRONT=frontend_ordenes_prod" >> $GITHUB_ENV
            echo "TAG=prod" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "development" ]; then
            echo "ENV_PATH_FRONT=/services/test/ordenes_compra/frontend/" >> $GITHUB_ENV
            echo "CONTAINER_NAME_FRONT=frontend_ordenes_test" >> $GITHUB_ENV
            echo "TAG=test" >> $GITHUB_ENV
          fi

      - name: SSH into server and deploy
        run: |
          sshpass -p ${{ secrets.AUTH_PASS }} ssh -o StrictHostKeyChecking=no ${{ secrets.AUTH_SERVER }} << EOF
            cd ${{ env.ENV_PATH_FRONT }}
            docker login ghcr.io -u cris590 -p ${{ secrets.TOKEN_GITHUB }}
            docker pull ghcr.io/cris590/ordencompra-front-v2:${{ env.TAG }}
            docker stop ${{ env.CONTAINER_NAME_FRONT }} && docker rm ${{ env.CONTAINER_NAME_FRONT }}
            docker compose up -d
          EOF
